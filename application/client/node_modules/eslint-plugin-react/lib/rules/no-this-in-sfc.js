/**
 * @fileoverview Report "this" being used in stateless functional components.
 */
'use strict';

const Components = require('../util/Components');
const docsUrl = require('../util/docsUrl');

// ------------------------------------------------------------------------------
// Constants
// ------------------------------------------------------------------------------

const ERROR_MESSAGE = 'Stateless functional components should not use this';

// ------------------------------------------------------------------------------
// Rule Definition
// ------------------------------------------------------------------------------

module.exports = {
  meta: {
    docs: {
      description: 'Report "this" being used in stateless components',
      category: 'Possible Errors',
      recommended: false,
      url: docsUrl('no-this-in-sfc')
    },
    schema: []
  },

  create: Components.detect((context, components, utils) => ({
    MemberExpression(node) {
<<<<<<< HEAD
      if (node.object.type === 'ThisExpression') {
        const component = components.get(utils.getParentStatelessComponent());
        if (!component) {
          return;
        }
=======
      const component = components.get(utils.getParentStatelessComponent());
      if (!component) {
        return;
      }
      if (node.object.type === 'ThisExpression') {
>>>>>>> de11bada15ff40c934c5f26ed44f7dbf2bb3ceec
        context.report({
          node: node,
          message: ERROR_MESSAGE
        });
      }
    }
  }))
};
